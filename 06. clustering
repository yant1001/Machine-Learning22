{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOdc2jQa+i4ZTvz8kMgONMl"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 12. Clustering"],"metadata":{"id":"Weg0B6TkblSR"}},{"cell_type":"code","source":["# %matplotlib inline => jupyter notebook을 실행한 브라우저에서 바로 그림을 볼 수 있게 해주는 것\n","\n","from sklearn.preprocessing import scale\n","from sklearn.datasets import load_iris\n","from sklearn.cluster import KMeans\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","%matplotlib inline"],"metadata":{"id":"gV2RGwrxsZC5","executionInfo":{"status":"ok","timestamp":1709207383916,"user_tz":-540,"elapsed":1591,"user":{"displayName":"양은서","userId":"11268513236679240832"}}},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":["## K-Means 군집"],"metadata":{"id":"e5AgY0N4sICQ"}},{"cell_type":"code","source":["iris = load_iris()\n","print('target name:', iris.target_names)\n","\n","# 데이터프레임으로 변환\n","irisDF = pd.DataFrame(data=iris.data, columns=['sepal_length','sepal_width','petal_length','petal_width'])\n","irisDF.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":162},"id":"ksEL2PCJsv76","executionInfo":{"status":"ok","timestamp":1709207538010,"user_tz":-540,"elapsed":329,"user":{"displayName":"양은서","userId":"11268513236679240832"}},"outputId":"06174fa4-0a19-462c-9cd4-84cb0d116176"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["target name: ['setosa' 'versicolor' 'virginica']\n"]},{"output_type":"execute_result","data":{"text/plain":["   sepal_length  sepal_width  petal_length  petal_width\n","0           5.1          3.5           1.4          0.2\n","1           4.9          3.0           1.4          0.2\n","2           4.7          3.2           1.3          0.2"],"text/html":["\n","  <div id=\"df-f90930c1-f494-422e-8630-b680b08d6807\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f90930c1-f494-422e-8630-b680b08d6807')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f90930c1-f494-422e-8630-b680b08d6807 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f90930c1-f494-422e-8630-b680b08d6807');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-adbccc69-57f4-488f-b9f9-e38c75856db3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-adbccc69-57f4-488f-b9f9-e38c75856db3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-adbccc69-57f4-488f-b9f9-e38c75856db3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"irisDF","summary":"{\n  \"name\": \"irisDF\",\n  \"rows\": 150,\n  \"fields\": [\n    {\n      \"column\": \"sepal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.828066127977863,\n        \"min\": 4.3,\n        \"max\": 7.9,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          6.2,\n          4.5,\n          5.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4358662849366982,\n        \"min\": 2.0,\n        \"max\": 4.4,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          2.3,\n          4.0,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7652982332594662,\n        \"min\": 1.0,\n        \"max\": 6.9,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          6.7,\n          3.8,\n          3.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7622376689603465,\n        \"min\": 0.1,\n        \"max\": 2.5,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.2,\n          1.2,\n          1.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# KMeans 군집에서는 클러스터의 개수를 미리 알고 있는 것이 가장 좋다.\n","#   아래에서 클러스터가 3개인 이유는, 꽃의 종류가 3개이기 때문.\n","#   랜덤하게 중심점을 잡기 때문에 random_state로 고정해둔다.\n","\n","n_clusters = 3\n","kmeans = KMeans(n_clusters=n_clusters, max_iter=300, random_state=0)\n","kmeans.fit(irisDF)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":131},"id":"mnPMQr-CtX9x","executionInfo":{"status":"ok","timestamp":1709207673371,"user_tz":-540,"elapsed":625,"user":{"displayName":"양은서","userId":"11268513236679240832"}},"outputId":"db387f8e-43ce-4dd4-8bd1-f3ba5d4cc882"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["KMeans(n_clusters=3, random_state=0)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=3, random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KMeans</label><div class=\"sk-toggleable__content\"><pre>KMeans(n_clusters=3, random_state=0)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["### KMeans의 속성(Property) 확인\n","- 훈련이 끝난 KMeans 군집 객체에서는 클러스터를 확인할 수 있다.\n","- `labels_`: 훈련된(fit) 데이터에 대한 군집 레이블을 확인한다.\n","  - 지도학습의 `label`과 다르다.\n","  - 군집에 부여되는 `label`(1, 2, 3 등의 군집번호)은 랜덤하게 부여되기 때문에 사람이 해석해야 한다.\n"],"metadata":{"id":"wxualOGot4C7"}},{"cell_type":"code","source":["kmeans.labels_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U4pRM6UQt8kL","executionInfo":{"status":"ok","timestamp":1709207876749,"user_tz":-540,"elapsed":5,"user":{"displayName":"양은서","userId":"11268513236679240832"}},"outputId":"27710e03-8ddd-4957-c8c4-6d9af0530e7d"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2,\n","       2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2,\n","       2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 0], dtype=int32)"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["kmeans.predict(irisDF)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"APqRu5EUu7Mh","executionInfo":{"status":"ok","timestamp":1709207968629,"user_tz":-540,"elapsed":306,"user":{"displayName":"양은서","userId":"11268513236679240832"}},"outputId":"983c2499-9497-465a-dc11-41fe44fbbe11"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2,\n","       2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2,\n","       2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 0], dtype=int32)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# 무작위로 꽃을 만들어서 어떤 클러스트에 속하는지 테스트 해보기\n","#   predict: 어떤 클러스트에 속할지 예측\n","#   fit_predict: 훈련 및 클러스트 예측까지 수행 => fit().predict()\n","\n","test_iris = np.array([[6.1, 2.5, 3.4, 1.2],\n","                      [3.8, 4.0, 3.1,\t3.3]])\n","\n","kmeans.predict(test_iris)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bTo0CL-rv_Nz","executionInfo":{"status":"ok","timestamp":1709208414033,"user_tz":-540,"elapsed":320,"user":{"displayName":"양은서","userId":"11268513236679240832"}},"outputId":"9229c087-5edf-4b7d-d85b-7858ec3e8211"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but KMeans was fitted with feature names\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0, 0], dtype=int32)"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# 위에서 fit(irisDF) & predict(test_iris)로 두 번에 나눠걸쳐 훈련과 예측을 진행했다면,\n","#   fit_predict(irisDF)로 한 번에 훈련과 예측을 수행 가능하다.\n","\n","kmeans.fit_predict(irisDF)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7MFoeEiXwsO2","executionInfo":{"status":"ok","timestamp":1709208556749,"user_tz":-540,"elapsed":312,"user":{"displayName":"양은서","userId":"11268513236679240832"}},"outputId":"f27053f8-a330-41d6-fab8-11be6527b73e"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2,\n","       2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2,\n","       2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 0], dtype=int32)"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["### 군집상의 좌표"],"metadata":{"id":"w4GcibR6xWnz"}},{"cell_type":"code","source":["# 군집을 3개로 설정했기 때문에 3개의 클러스터가 나왔다.\n","#   3개의 클러스터를 갖기 때문에 축도 3개\n","#   각 군집이 하나의 좌표가 되며, 아래는 그 좌표값을 출력한 것\n","\n","kmeans.transform(irisDF)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WQjdTNAeyb4Y","executionInfo":{"status":"ok","timestamp":1709208890619,"user_tz":-540,"elapsed":5,"user":{"displayName":"양은서","userId":"11268513236679240832"}},"outputId":"47e1b055-a182-42a4-cb53-117375325bd2"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[3.41925061, 0.14135063, 5.0595416 ],\n","       [3.39857426, 0.44763825, 5.11494335],\n","       [3.56935666, 0.4171091 , 5.27935534],\n","       [3.42240962, 0.52533799, 5.15358977],\n","       [3.46726403, 0.18862662, 5.10433388],\n","       [3.14673162, 0.67703767, 4.68148797],\n","       [3.51650264, 0.4151867 , 5.21147652],\n","       [3.33654987, 0.06618157, 5.00252706],\n","       [3.57233779, 0.80745278, 5.32798107],\n","       [3.3583767 , 0.37627118, 5.06790865],\n","       [3.32449131, 0.4824728 , 4.89806763],\n","       [3.31126872, 0.25373214, 4.9966845 ],\n","       [3.46661272, 0.50077939, 5.19103612],\n","       [3.90578362, 0.91322505, 5.65173594],\n","       [3.646649  , 1.01409073, 5.10804455],\n","       [3.49427881, 1.20481534, 4.88564095],\n","       [3.495248  , 0.6542018 , 5.03090587],\n","       [3.38444981, 0.1441527 , 5.02342022],\n","       [3.11245944, 0.82436642, 4.61792995],\n","       [3.37738931, 0.38933276, 4.97213426],\n","       [3.07471224, 0.46344363, 4.6955761 ],\n","       [3.31506588, 0.3286031 , 4.9236821 ],\n","       [3.93167253, 0.64029681, 5.59713396],\n","       [3.01233762, 0.38259639, 4.68193765],\n","       [3.06241269, 0.48701129, 4.75095704],\n","       [3.19414543, 0.45208406, 4.90772894],\n","       [3.17967089, 0.20875823, 4.84545508],\n","       [3.30941724, 0.21536016, 4.93969029],\n","       [3.37648183, 0.21066561, 5.01833618],\n","       [3.31272968, 0.40838707, 5.02954567],\n","       [3.26550651, 0.41373905, 4.98608729],\n","       [3.18083736, 0.42565244, 4.79550372],\n","       [3.53142353, 0.71552778, 5.06520776],\n","       [3.57102821, 0.91977171, 5.04438334],\n","       [3.31992769, 0.34982853, 5.02985959],\n","       [3.56904033, 0.35039977, 5.25071556],\n","       [3.43783276, 0.52685861, 5.02368214],\n","       [3.53114948, 0.25686572, 5.17865184],\n","       [3.66205264, 0.76077592, 5.40750095],\n","       [3.31092773, 0.11480418, 4.9664149 ],\n","       [3.49764675, 0.18541845, 5.14520862],\n","       [3.60850034, 1.24803045, 5.38423754],\n","       [3.68120561, 0.6690142 , 5.40847417],\n","       [3.14278239, 0.38675574, 4.78803478],\n","       [3.00585191, 0.60231221, 4.59828494],\n","       [3.39468045, 0.48205809, 5.11844067],\n","       [3.32788568, 0.41034132, 4.92421655],\n","       [3.51879523, 0.47199576, 5.23766854],\n","       [3.34104251, 0.40494444, 4.92859681],\n","       [3.40601705, 0.14959947, 5.08216833],\n","       [1.22697525, 3.98049997, 1.25489071],\n","       [0.684141  , 3.57731464, 1.44477759],\n","       [1.17527644, 4.13366423, 1.01903626],\n","       [0.73153652, 3.01144152, 2.45978458],\n","       [0.63853451, 3.74779669, 1.3520017 ],\n","       [0.26937898, 3.34908644, 1.88009327],\n","       [0.76452634, 3.74283048, 1.28902785],\n","       [1.58388575, 2.23937045, 3.37155487],\n","       [0.75582717, 3.71181627, 1.41123804],\n","       [0.85984838, 2.8005678 , 2.58955659],\n","       [1.53611907, 2.60022691, 3.27864111],\n","       [0.32426175, 3.17042268, 1.90055758],\n","       [0.80841374, 3.08317693, 2.38073698],\n","       [0.39674141, 3.64581678, 1.45909603],\n","       [0.87269542, 2.51268382, 2.60303733],\n","       [0.87306498, 3.59732957, 1.50822767],\n","       [0.41229163, 3.36719171, 1.85387593],\n","       [0.53579956, 2.94753796, 2.25517257],\n","       [0.6367639 , 3.70615434, 1.74778451],\n","       [0.71254917, 2.80841236, 2.49557781],\n","       [0.7093731 , 3.79583719, 1.37094403],\n","       [0.46349013, 3.02383531, 2.06563694],\n","       [0.69373966, 3.99098735, 1.29106776],\n","       [0.43661144, 3.60360653, 1.57547425],\n","       [0.54593856, 3.37448959, 1.70495043],\n","       [0.74313017, 3.56196294, 1.52298639],\n","       [0.98798453, 4.01083283, 1.18965415],\n","       [1.06739835, 4.20528001, 0.84636259],\n","       [0.21993519, 3.47401497, 1.61913335],\n","       [1.0243726 , 2.42676328, 2.77868071],\n","       [0.86396528, 2.73795179, 2.6440625 ],\n","       [0.97566381, 2.62259032, 2.75566654],\n","       [0.55763082, 2.83096803, 2.32254696],\n","       [0.73395781, 4.07263797, 1.22324554],\n","       [0.57500396, 3.33772078, 1.9942056 ],\n","       [0.68790275, 3.47153856, 1.61049622],\n","       [0.92700552, 3.87741924, 1.19803047],\n","       [0.61459444, 3.56224367, 1.81572464],\n","       [0.50830256, 2.93359506, 2.20430516],\n","       [0.6291191 , 2.94237659, 2.40438484],\n","       [0.48790256, 3.23598208, 2.14635877],\n","       [0.38266958, 3.5438369 , 1.52402278],\n","       [0.49185351, 2.94407541, 2.26286106],\n","       [1.5485635 , 2.28455247, 3.33648305],\n","       [0.3856087 , 3.08064604, 2.16211718],\n","       [0.44284695, 3.01190637, 2.11299567],\n","       [0.3449879 , 3.0607156 , 2.07973003],\n","       [0.37241653, 3.29690461, 1.76829182],\n","       [1.66064034, 1.99117553, 3.44291999],\n","       [0.38393196, 2.99098312, 2.16527941],\n","       [2.0445799 , 5.23113563, 0.77731871],\n","       [0.85382472, 4.13898297, 1.29757391],\n","       [2.05245342, 5.26319105, 0.30610139],\n","       [1.33089245, 4.63585807, 0.65293923],\n","       [1.72813078, 5.00515534, 0.38458885],\n","       [2.87401886, 6.06204421, 1.14225684],\n","       [1.07101875, 3.49513662, 2.4108337 ],\n","       [2.39730707, 5.6002125 , 0.78573677],\n","       [1.67668563, 4.9963967 , 0.65454939],\n","       [2.54158648, 5.60667281, 0.8435596 ],\n","       [1.17541367, 4.31225927, 0.74552218],\n","       [1.13563278, 4.46533089, 0.75289837],\n","       [1.59322675, 4.81086063, 0.25958095],\n","       [0.88917352, 4.11543193, 1.48572618],\n","       [1.20227628, 4.34736472, 1.30303821],\n","       [1.42273608, 4.57650303, 0.68288333],\n","       [1.33403966, 4.59734489, 0.50991553],\n","       [3.20105585, 6.21697515, 1.47791217],\n","       [3.20759942, 6.46018421, 1.52971038],\n","       [0.82617494, 4.07258886, 1.53708992],\n","       [1.91251832, 5.08121836, 0.26952816],\n","       [0.81891975, 3.95519658, 1.5334904 ],\n","       [2.9794431 , 6.17779734, 1.31149299],\n","       [0.74269596, 4.05452587, 1.10668455],\n","       [1.75847731, 4.92787784, 0.27627819],\n","       [2.14580999, 5.27958142, 0.52766931],\n","       [0.62526165, 3.92137476, 1.20765678],\n","       [0.70228926, 3.95155412, 1.16212743],\n","       [1.4663925 , 4.78518338, 0.54629196],\n","       [1.93773659, 5.06442297, 0.59428255],\n","       [2.31885342, 5.51111422, 0.7312665 ],\n","       [3.07340053, 5.99783127, 1.43802246],\n","       [1.51444141, 4.8248088 , 0.5605572 ],\n","       [0.81536685, 4.10808715, 1.05631592],\n","       [1.23209127, 4.50967626, 1.12133058],\n","       [2.6381171 , 5.75940796, 0.95311851],\n","       [1.72401927, 4.84127876, 0.73306362],\n","       [1.31541133, 4.557541  , 0.57903109],\n","       [0.61011676, 3.83775716, 1.29960041],\n","       [1.60532899, 4.7581488 , 0.34794609],\n","       [1.77481954, 4.97393004, 0.3893492 ],\n","       [1.53937059, 4.59878027, 0.68403844],\n","       [0.85382472, 4.13898297, 1.29757391],\n","       [2.00764279, 5.21394093, 0.30952112],\n","       [1.94554509, 5.09187392, 0.50939919],\n","       [1.44957743, 4.60916261, 0.61173881],\n","       [0.89747884, 4.21767471, 1.10072376],\n","       [1.17993324, 4.41184542, 0.65334214],\n","       [1.50889317, 4.59925864, 0.83572418],\n","       [0.83452741, 4.0782815 , 1.1805499 ]])"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["### 실제 타겟과 군집의 차이를 비교"],"metadata":{"id":"-pviHg5f0SKm"}},{"cell_type":"code","source":["# iris.target     => 실제 타겟\n","# kmeans.label_   => 군집\n","#   군집의 모습을 통해 0번과 2번 꽃이 혼잡하게 섞여있다는 것을 확인할 수 있다.\n","\n","iris.target, kmeans.labels_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1OtCzgFz0WvB","executionInfo":{"status":"ok","timestamp":1709209394578,"user_tz":-540,"elapsed":350,"user":{"displayName":"양은서","userId":"11268513236679240832"}},"outputId":"c77dcd31-b4ba-46fe-a45f-9d508c90283d"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","        0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]),\n"," array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","        1, 1, 1, 1, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2,\n","        2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2,\n","        2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 0], dtype=int32))"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# 실제 타겟과 군집 정보를 담은 컬럼을 추가 생성\n","\n","irisDF['target'] = iris.target\n","irisDF['cluster'] = kmeans.labels_\n","irisDF.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"lYP1WIi-0tUE","executionInfo":{"status":"ok","timestamp":1709209652167,"user_tz":-540,"elapsed":308,"user":{"displayName":"양은서","userId":"11268513236679240832"}},"outputId":"30be52e8-ac5e-41b1-c991-e180f46f06c7"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   sepal_length  sepal_width  petal_length  petal_width  target  cluster\n","0           5.1          3.5           1.4          0.2       0        1\n","1           4.9          3.0           1.4          0.2       0        1\n","2           4.7          3.2           1.3          0.2       0        1\n","3           4.6          3.1           1.5          0.2       0        1\n","4           5.0          3.6           1.4          0.2       0        1"],"text/html":["\n","  <div id=\"df-512479ab-9e96-40be-a2a4-aad7367d0c79\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","      <th>target</th>\n","      <th>cluster</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-512479ab-9e96-40be-a2a4-aad7367d0c79')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-512479ab-9e96-40be-a2a4-aad7367d0c79 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-512479ab-9e96-40be-a2a4-aad7367d0c79');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a2cbf111-ce3f-41ee-945f-b28b170183ab\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a2cbf111-ce3f-41ee-945f-b28b170183ab')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a2cbf111-ce3f-41ee-945f-b28b170183ab button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"irisDF","summary":"{\n  \"name\": \"irisDF\",\n  \"rows\": 150,\n  \"fields\": [\n    {\n      \"column\": \"sepal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.828066127977863,\n        \"min\": 4.3,\n        \"max\": 7.9,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          6.2,\n          4.5,\n          5.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4358662849366982,\n        \"min\": 2.0,\n        \"max\": 4.4,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          2.3,\n          4.0,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7652982332594662,\n        \"min\": 1.0,\n        \"max\": 6.9,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          6.7,\n          3.8,\n          3.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7622376689603465,\n        \"min\": 0.1,\n        \"max\": 2.5,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.2,\n          1.2,\n          1.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cluster\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# 실제 타겟과 군집의 개수를 각각 확인\n","#   0번 타겟은 클러스터1로 군집화가 잘 이루어졌다.\n","#   1번 타겟은 클러스터가 2개로 나뉘었으며, 클러스터0에 과하게 쏠린 현상을 보이기 때문에 군집화가 잘 이루어지지 않았다.\n","#   2번 타겟도 마찬가지로 클러스터가 2개로 나뉘었으나 1번 타겟보다는 균등한 모습을 보이며, 군집화가 잘 이루어지지 않았음을 알 수 있다.\n","#   KMeans로는 1번과 2번 클러스터를 군집화하는 게 쉽지 않았음을 알 수 있다.\n","\n","irisDF.groupby(['target', 'cluster']).count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"dTo4udAq1do0","executionInfo":{"status":"ok","timestamp":1709209707003,"user_tz":-540,"elapsed":6,"user":{"displayName":"양은서","userId":"11268513236679240832"}},"outputId":"0c2045e0-4ed7-4493-c245-24d376016f22"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                sepal_length  sepal_width  petal_length  petal_width\n","target cluster                                                      \n","0      1                  50           50            50           50\n","1      0                  48           48            48           48\n","       2                   2            2             2            2\n","2      0                  14           14            14           14\n","       2                  36           36            36           36"],"text/html":["\n","  <div id=\"df-22423843-1baf-4311-89ae-aee44eccd166\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","    </tr>\n","    <tr>\n","      <th>target</th>\n","      <th>cluster</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <th>1</th>\n","      <td>50</td>\n","      <td>50</td>\n","      <td>50</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">1</th>\n","      <th>0</th>\n","      <td>48</td>\n","      <td>48</td>\n","      <td>48</td>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">2</th>\n","      <th>0</th>\n","      <td>14</td>\n","      <td>14</td>\n","      <td>14</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>36</td>\n","      <td>36</td>\n","      <td>36</td>\n","      <td>36</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-22423843-1baf-4311-89ae-aee44eccd166')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-22423843-1baf-4311-89ae-aee44eccd166 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-22423843-1baf-4311-89ae-aee44eccd166');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7e3d96b1-d589-4f99-8e7f-f8fc299b4a0d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7e3d96b1-d589-4f99-8e7f-f8fc299b4a0d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7e3d96b1-d589-4f99-8e7f-f8fc299b4a0d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"irisDF\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"sepal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 2,\n        \"max\": 50,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          48,\n          36,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 2,\n        \"max\": 50,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          48,\n          36,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 2,\n        \"max\": 50,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          48,\n          36,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 2,\n        \"max\": 50,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          48,\n          36,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["iris.data\n","irisDF"],"metadata":{"id":"qaSEcEDe5hVS","executionInfo":{"status":"ok","timestamp":1709210752985,"user_tz":-540,"elapsed":359,"user":{"displayName":"양은서","userId":"11268513236679240832"}},"outputId":"30715027-19ab-4583-9fb0-bca07262648e","colab":{"base_uri":"https://localhost:8080/","height":443}},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     sepal_length  sepal_width  petal_length  petal_width  target  cluster  \\\n","0             5.1          3.5           1.4          0.2       0        1   \n","1             4.9          3.0           1.4          0.2       0        1   \n","2             4.7          3.2           1.3          0.2       0        1   \n","3             4.6          3.1           1.5          0.2       0        1   \n","4             5.0          3.6           1.4          0.2       0        1   \n","..            ...          ...           ...          ...     ...      ...   \n","145           6.7          3.0           5.2          2.3       2        2   \n","146           6.3          2.5           5.0          1.9       2        0   \n","147           6.5          3.0           5.2          2.0       2        2   \n","148           6.2          3.4           5.4          2.3       2        2   \n","149           5.9          3.0           5.1          1.8       2        0   \n","\n","           c1        c2  \n","0   -2.684126  0.319397  \n","1   -2.714142 -0.177001  \n","2   -2.888991 -0.144949  \n","3   -2.745343 -0.318299  \n","4   -2.728717  0.326755  \n","..        ...       ...  \n","145  1.944110  0.187532  \n","146  1.527167 -0.375317  \n","147  1.764346  0.078859  \n","148  1.900942  0.116628  \n","149  1.390189 -0.282661  \n","\n","[150 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-23338e3f-d0c3-4062-945f-8b248dfd2518\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","      <th>target</th>\n","      <th>cluster</th>\n","      <th>c1</th>\n","      <th>c2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>-2.684126</td>\n","      <td>0.319397</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>-2.714142</td>\n","      <td>-0.177001</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>-2.888991</td>\n","      <td>-0.144949</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>-2.745343</td>\n","      <td>-0.318299</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>-2.728717</td>\n","      <td>0.326755</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1.944110</td>\n","      <td>0.187532</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1.527167</td>\n","      <td>-0.375317</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1.764346</td>\n","      <td>0.078859</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1.900942</td>\n","      <td>0.116628</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1.390189</td>\n","      <td>-0.282661</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-23338e3f-d0c3-4062-945f-8b248dfd2518')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-23338e3f-d0c3-4062-945f-8b248dfd2518 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-23338e3f-d0c3-4062-945f-8b248dfd2518');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cd30887e-e307-4f0e-885b-6194be9f0374\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cd30887e-e307-4f0e-885b-6194be9f0374')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cd30887e-e307-4f0e-885b-6194be9f0374 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d4b0b803-e525-4fd6-95e9-6c6931f8cf3a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('irisDF')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d4b0b803-e525-4fd6-95e9-6c6931f8cf3a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('irisDF');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"irisDF","summary":"{\n  \"name\": \"irisDF\",\n  \"rows\": 150,\n  \"fields\": [\n    {\n      \"column\": \"sepal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.828066127977863,\n        \"min\": 4.3,\n        \"max\": 7.9,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          6.2,\n          4.5,\n          5.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4358662849366982,\n        \"min\": 2.0,\n        \"max\": 4.4,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          2.3,\n          4.0,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7652982332594662,\n        \"min\": 1.0,\n        \"max\": 6.9,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          6.7,\n          3.8,\n          3.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7622376689603465,\n        \"min\": 0.1,\n        \"max\": 2.5,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.2,\n          1.2,\n          1.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cluster\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.056268879800223,\n        \"min\": -3.223803743865653,\n        \"max\": 3.795645422072883,\n        \"num_unique_values\": 149,\n        \"samples\": [\n          0.9217289224470365,\n          -2.1998203236175806,\n          3.487055364290279\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4926162278372825,\n        \"min\": -1.2659711905263937,\n        \"max\": 1.3741650867930468,\n        \"num_unique_values\": 149,\n        \"samples\": [\n          -0.18273779362136777,\n          0.8728390389622106,\n          1.1757393297134284\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["# PCA(주성분 분석) 방법으로 데이터 차원축소 후 시각화\n","#   눈으로 볼 수 있는 건 3차원이 최대이기 때문에 너무 고차원의 경우 과하게 정보가 함축되어 PCA 수행이 불가능하다.\n","#   차원수가 낮아야 좀 더 명확하고 깔끔한 형태가 출력된다.\n","#   군집을 시각화하기보다는 군집의 결과를 시각화하는 경우가 많다.\n","\n","from sklearn.decomposition import PCA\n","\n","pca = PCA(n_components=2)\n","pca_transformed = pca.fit_transform(iris.data)\n","\n","irisDF['c1'] = pca_transformed[:, 0]\n","irisDF['c2'] = pca_transformed[:, 1]\n","\n","irisDF.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"DIbY8S_E2Yca","executionInfo":{"status":"ok","timestamp":1709210306987,"user_tz":-540,"elapsed":10,"user":{"displayName":"양은서","userId":"11268513236679240832"}},"outputId":"665825e1-582d-403c-b74e-1383277db44a"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   sepal_length  sepal_width  petal_length  petal_width  target  cluster  \\\n","0           5.1          3.5           1.4          0.2       0        1   \n","1           4.9          3.0           1.4          0.2       0        1   \n","2           4.7          3.2           1.3          0.2       0        1   \n","3           4.6          3.1           1.5          0.2       0        1   \n","4           5.0          3.6           1.4          0.2       0        1   \n","\n","         c1        c2  \n","0 -2.684126  0.319397  \n","1 -2.714142 -0.177001  \n","2 -2.888991 -0.144949  \n","3 -2.745343 -0.318299  \n","4 -2.728717  0.326755  "],"text/html":["\n","  <div id=\"df-47bea16e-aaa4-4e6f-ba7e-733b8652a995\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","      <th>target</th>\n","      <th>cluster</th>\n","      <th>c1</th>\n","      <th>c2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>-2.684126</td>\n","      <td>0.319397</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>-2.714142</td>\n","      <td>-0.177001</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>-2.888991</td>\n","      <td>-0.144949</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>-2.745343</td>\n","      <td>-0.318299</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>-2.728717</td>\n","      <td>0.326755</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47bea16e-aaa4-4e6f-ba7e-733b8652a995')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-47bea16e-aaa4-4e6f-ba7e-733b8652a995 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-47bea16e-aaa4-4e6f-ba7e-733b8652a995');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d32dc354-b16e-480e-b2fa-77a80156a33f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d32dc354-b16e-480e-b2fa-77a80156a33f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d32dc354-b16e-480e-b2fa-77a80156a33f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"irisDF","summary":"{\n  \"name\": \"irisDF\",\n  \"rows\": 150,\n  \"fields\": [\n    {\n      \"column\": \"sepal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.828066127977863,\n        \"min\": 4.3,\n        \"max\": 7.9,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          6.2,\n          4.5,\n          5.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4358662849366982,\n        \"min\": 2.0,\n        \"max\": 4.4,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          2.3,\n          4.0,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7652982332594662,\n        \"min\": 1.0,\n        \"max\": 6.9,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          6.7,\n          3.8,\n          3.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7622376689603465,\n        \"min\": 0.1,\n        \"max\": 2.5,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.2,\n          1.2,\n          1.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cluster\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.056268879800223,\n        \"min\": -3.223803743865653,\n        \"max\": 3.795645422072883,\n        \"num_unique_values\": 149,\n        \"samples\": [\n          0.9217289224470365,\n          -2.1998203236175806,\n          3.487055364290279\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4926162278372825,\n        \"min\": -1.2659711905263937,\n        \"max\": 1.3741650867930468,\n        \"num_unique_values\": 149,\n        \"samples\": [\n          -0.18273779362136777,\n          0.8728390389622106,\n          1.1757393297134284\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["# 각 컴포넌트별 군집 확인\n","\n","import seaborn as sns\n","\n","sns.scatterplot(\n","    x = 'c1',\n","    y = 'c2',\n","    hue = 'cluster',\n","    palette = 'muted',\n","    data = irisDF\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"rs8DeUq54BCz","executionInfo":{"status":"ok","timestamp":1709210430824,"user_tz":-540,"elapsed":1082,"user":{"displayName":"양은서","userId":"11268513236679240832"}},"outputId":"82a76b29-d560-41c8-9c2c-83337a448a90"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='c1', ylabel='c2'>"]},"metadata":{},"execution_count":24},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## MeanShift 군집"],"metadata":{"id":"2AzECT9FsMT_"}},{"cell_type":"markdown","source":["## GMM 군집 사용하기"],"metadata":{"id":"5r9mbnRCsOd_"}},{"cell_type":"markdown","source":["## DBSCAN 군집"],"metadata":{"id":"oZM5PQ0YsRIE"}}]}